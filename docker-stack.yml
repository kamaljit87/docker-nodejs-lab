version: "3.8"

services:
  web:
    image: node-docker-demo:1.0.0
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - appnet
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      rollback_config:
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 64M

  nginx:
    image: nginx:1.27-alpine
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    networks:
      - appnet
    volumes:
      - letsencrypt:/etc/letsencrypt:ro
      - certbot-www:/var/www/certbot
    configs:
      - source: nginx_conf
        target: /etc/nginx/conf.d/app.conf
        mode: 0444
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any

  # One-shot: run once to obtain certs (scale to 1, then back to 0 after success)
  certbot_init:
    image: certbot/certbot:latest
    command: >
      certonly --webroot -w /var/www/certbot
      --email kamaljit.s@outlook.com
      -d swam.kamaljits.xyz
      --agree-tos --no-eff-email --rsa-key-size 4096 --non-interactive
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    deploy:
      replicas: 0
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none

  # Renewal loop (runs daily; nginx will use renewed certs after a reload/redeploy)
  certbot_renew:
    image: certbot/certbot:latest
    command: >
      sh -c 'while :; do
               certbot renew --webroot -w /var/www/certbot --quiet;
               sleep 12h;
             done'
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any

networks:
  appnet:
    driver: overlay
    attachable: true

volumes:
  letsencrypt:
  certbot-www:

configs:
  nginx_conf:
    file: ./nginx.conf
